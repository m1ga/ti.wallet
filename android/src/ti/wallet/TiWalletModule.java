/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * TiDev Titanium Mobile
 * Copyright TiDev, Inc. 04/07/2022-Present
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 */
package ti.wallet;

import static android.app.Activity.RESULT_CANCELED;
import static android.app.Activity.RESULT_OK;

import android.app.Activity;
import android.content.Intent;

import com.google.android.gms.pay.Pay;
import com.google.android.gms.pay.PayApiAvailabilityStatus;
import com.google.android.gms.pay.PayClient;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.TiLifecycle;
// import com.google.android.gms.pay.Pay;
// import com.google.android.gms.pay.PayClient;


@Kroll.module(name = "TiWallet", id = "ti.wallet")
public class TiWalletModule extends KrollModule implements TiLifecycle.OnActivityResultEvent {

    // Standard Debugging variables
    private static final String LCAT = "TiWalletModule";
    int ADD_TO_GOOGLE_WALLET_REQUEST_CODE = 999;
    private PayClient walletClient;

    public TiWalletModule() {
        super();
    }

    @Kroll.onAppCreate
    public static void onAppCreate(TiApplication app) {
    }

    // Methods
    @Kroll.method
    public void init() {
        walletClient = Pay.getClient(TiApplication.getAppCurrentActivity());
        fetchCanAddPassesToGoogleWallet();
    }

    @Kroll.method
    public void save(Object obj) {
        walletClient.savePasses((String) obj, TiApplication.getAppCurrentActivity(), ADD_TO_GOOGLE_WALLET_REQUEST_CODE);
    }

    private void fetchCanAddPassesToGoogleWallet() {
        walletClient
                .getPayApiAvailabilityStatus(PayClient.RequestType.SAVE_PASSES)
                .addOnSuccessListener(status -> {
                    if (status == PayApiAvailabilityStatus.AVAILABLE) {
                        // The API is available, show the button in your UI
                        fireEvent("success", new KrollDict());
                    }
                })
                // Google Play Services is too old. API availability can't be verified.
                .addOnFailureListener(exception -> {
                    // Hide the button and optionally show an error message
                    KrollDict kd = new KrollDict();
                    kd.put("message", exception.getMessage());
                    fireEvent("error", kd);
                });
    }


    @Override
    public void onActivityResult(Activity activity, int requestCode, int resultCode, Intent data) {
        if (requestCode == ADD_TO_GOOGLE_WALLET_REQUEST_CODE) {
            switch (resultCode) {
                case RESULT_OK: {
                    fireEvent("success", new KrollDict());
                    break;
                }

                case RESULT_CANCELED: {
                    // Save operation canceled
                    fireEvent("cancel", new KrollDict());
                    break;
                }

                case PayClient.SavePassesResult.SAVE_ERROR: {
                    if (data != null) {
                        KrollDict kd = new KrollDict();
                        kd.put("message", data.getStringExtra(PayClient.EXTRA_API_ERROR_MESSAGE));
                        fireEvent("error", kd);
                    }
                    break;
                }

                default: {
                    // Handle unexpected (non-API) exception
                }
            }
        }

    }
}
